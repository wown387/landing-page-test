{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/about.jsx","components/gallery.jsx","components/testimonials.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","bg","zIndex","position","top","data","title","paragraph","split","map","txt","more","Features","d","i","style","width","src","image","alt","text","About","Why","Why2","Gallery","useState","currentImage","setCurrentImage","isViewerOpen","setIsViewerOpen","thumb","images","obj","replace","openImageViewer","useCallback","index","onClick","backgroundStyle","currentIndex","onClose","Testimonials","objectFit","backgroundColor","img","name","Footer","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8e47f46.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            Hello universe\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Skills\n              </a>\n            </li>\n            <li>\n              <a href='#about' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                Projects\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Projects Detail\n              </a>\n            </li>\n\n            <li>\n              <a href='#testimonials' className='page-scroll'>\n                Career\n              </a>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"circle\" bg={{ zIndex: 0, position: \"absolute\", top: 0 }} />\n        <div className='overlay'>\n          <div className='container'>\n\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph.split(\"\\n\").map(txt => <>{txt}   <br /> </>) : 'Loading'}</p>\n                <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  {props.data ? props.data.more : \"Loading\"}\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Skills</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  {/* <i className={d.icon}></i> */}\n                  <div >\n                    <img  style={{width:\"250px\"}} src={d.image} alt=\"\" />\n                  </div>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12 col-md-6'>\n            {' '}\n            <img src='img/my.jpg' className='img-responsive' alt='' />{' '}\n          </div>\n          <div className='col-xs-12 col-md-6'>\n            <div className='about-text'>\n              <h2>About Me</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n              <h3>Why Choose Me?</h3>\n              <div className='list-style'>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from \"react\";\nimport ImageViewer from \"react-simple-image-viewer\";\n\nexport const Gallery = props => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n  const data = [\n    { thumb: \"img/portfolio/1.png\", title: \"인플루언서 쇼핑몰\" },\n    { thumb: \"img/portfolio/2.png\", title: \"스튜디오 빌더\" },\n    { thumb: \"img/portfolio/3.png\", title: \"관리자 페이지\" },\n    { thumb: \"img/portfolio/4.png\", title: \"NFT 인증 어플\" },\n    { thumb: \"img/portfolio/5.png\", title: \"아티클 사이트\" },\n    { thumb: \"img/portfolio/6.png\", title: \"출시 대기 프로젝트\" },\n    \n  ];\n\n  const images = data.map(obj => obj.thumb.replace(\"-small\", \"-large\"));\n\n  const openImageViewer = useCallback(index => {\n    setCurrentImage(index);\n    setIsViewerOpen(true);\n  }, []);\n\n  const closeImageViewer = () => {\n    setCurrentImage(0);\n    setIsViewerOpen(false);\n  };\n\n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Projects</h2>\n          {/* <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed dapibus leonec.</p> */}\n        </div>\n        <div className=\"row\">\n          <div className=\"portfolio-items\">\n            {data.map(({ title, thumb }, index) => (\n              <div key={index} onClick={() => openImageViewer(index)} className=\"col-sm-6 col-md-4 col-lg-4\">\n                <div className=\"portfolio-item cursor\">\n                  <div className=\"hover-bg\">\n                    <div className=\"hover-text\">\n                      <h4>{title}</h4>\n                    </div>\n                    <img src={thumb} className=\"img-responsive\" alt=\"Project Title\" />{\" \"}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {isViewerOpen && (\n            <ImageViewer\n              src={images}\n              backgroundStyle={{ zIndex: 99999 }}\n              currentIndex={currentImage}\n              onClose={closeImageViewer}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Testimonials = (props) => {\n  return (\n    <div id='testimonials'>\n      <div className='container'>\n        <div className='section-title text-center'>\n          <h2>Career</h2>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n              <div key={`${d.name}-${i}`} className='col-md-4'>\n                <div className='testimonial'>\n                  <div className='testimonial-image'>\n                    {' '}\n                    { (i == 1||i==3) ?\n                      <img style={{ objectFit: \"contain\", backgroundColor: \"black\" }} src={d.img} alt='' />\n                      :\n                      <img style={{ objectFit: \"contain\", }} src={d.img} alt='' />\n                    }\n\n                    {' '}\n                  </div>\n                  <div className='testimonial-content'>\n                    <p>\"{d.text}\"</p>\n                    <div className='testimonial-meta'> - {d.name} </div>\n                  </div>\n                </div>\n              </div>\n            ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n  \n  return (\n    <div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2023 Dinkas Inc. All Rights Reserved {' '}\n            {/* <a href='http://www.templatewire.com' rel='nofollow'>\n              TemplateWire\n            </a> */}\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Features } from './components/features'\nimport { About } from './components/about'\nimport { Services } from './components/services'\nimport { Gallery } from './components/gallery'\nimport { Testimonials } from './components/testimonials'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n    // const mapDiv = document.getElementById(\"map\");\n    // console.log(mapDiv, 123)\n    // const map = new window.naver.maps.Map(mapDiv);\n  }, [])\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <About data={landingPageData.About} />\n      <Gallery />\n      {/* <Services data={landingPageData.Services} /> */}\n      <Testimonials data={landingPageData.Testimonials} />\n      <Footer />\n      {/* <MapNaverDefault /> */}\n    </div>\n\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}